/************ Update: Schemas ***************/

COMMENT ON SCHEMA public IS NULL;



/************ Add: Sequences ***************/

/* Autogenerated Sequences */

CREATE SEQUENCE bitacora_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE bitacora_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE credencial_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE credencial_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE recordar_me_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE recordar_me_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_credencial_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_credencial_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE depto_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE depto_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE genero_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE genero_id_seq IS 'DbWrench Autogenerated Sequence.';


CREATE SEQUENCE ciudad_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE ciudad_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE proveedor_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE proveedor_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tipo_insumo_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE tipo_insumo_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE insumo_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE insumo_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tipo_id_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE tipo_id_id_seq IS 'DbWrench Autogenerated Sequence.';


CREATE SEQUENCE empleado_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE empleado_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE lote_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE lote_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE raza_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE raza_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE estado_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE estado_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE control_peso_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE lote_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE hoja_vida_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE hoja_vida_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tipo_venta_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE hoja_vida_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE unidad_medida_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE unidad_medida_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE sacrificio_venta_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE hoja_vida_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tipo_doc_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE tipo_doc_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE vacunacion_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE vacunacion_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE parto_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE parto_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE entrada_bodega_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE entrada_bodega_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE detalle_entradaB_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE detalle_entradaB_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE salida_bodega_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE salida_bodega_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE detalle_salidaB_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE detalle_salidaB_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE inventario_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE inventario_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE reporte_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE reporte_id_seq IS 'DbWrench Autogenerated Sequence.';



/************ Update: Tables ***************/

/******************** Add Table: bitacora ************************/

/* Build Table Structure */
CREATE TABLE bitacora
(
	id BIGINT DEFAULT nextval('public.bitacora_id_seq'::regclass) NOT NULL,
	usuario_id BIGINT NOT NULL,
	accion VARCHAR(80) NOT NULL,
	tabla VARCHAR(80) NOT NULL,
	registro BIGINT NULL,
	observacion VARCHAR(1024) NULL,
	fecha TIMESTAMP DEFAULT now() NOT NULL
);

/* Add Primary Key */
ALTER TABLE bitacora ADD CONSTRAINT pkbitacora
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "bitacora_fecha_Idx" ON bitacora (fecha);

CREATE INDEX "bitacora_usuario_id_Idx" ON bitacora (usuario_id);


/******************** Add Table: credencial ************************/

/* Build Table Structure */
CREATE TABLE credencial
(
	id BIGINT DEFAULT nextval('public.credencial_id_seq'::regclass) NOT NULL,
	nombre VARCHAR(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE credencial ADD CONSTRAINT pkcredencial
	PRIMARY KEY (id);


/******************** Add Table: recordar_me ************************/

/* Build Table Structure */
CREATE TABLE recordar_me
(
	id BIGINT DEFAULT nextval('public.recordar_me_id_seq'::regclass) NOT NULL,
	usuario_id BIGINT NOT NULL,
	ip_address VARCHAR(50) NOT NULL,
	hash_cookie VARCHAR(32) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL
);

/* Add Primary Key */
ALTER TABLE recordar_me ADD CONSTRAINT pkrecordar_me
	PRIMARY KEY (id);

/* Add Indexes */
CREATE UNIQUE INDEX "recordar_me_ip_address_hash_cookie_Idx" ON recordar_me (ip_address, hash_cookie);

CREATE INDEX "recordar_me_usuario_id_Idx" ON recordar_me (usuario_id);


/******************** Add Table: usuario ************************/

/* Build Table Structure */
CREATE TABLE usuario
(
	id BIGINT DEFAULT nextval('public.usuario_id_seq'::regclass) NOT NULL,
	user_name VARCHAR(80) NOT NULL,
	password VARCHAR(32) NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL,
	last_login_at TIMESTAMP NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE usuario ADD CONSTRAINT pkusuario
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN usuario.actived IS 'TRUE = activado | FALSE = desactivado';

/* Add Indexes */
CREATE INDEX "usuario_actived_Idx" ON usuario (actived);

CREATE INDEX "usuario_deleted_at_Idx" ON usuario (deleted_at);

CREATE UNIQUE INDEX "usuario_user_name_Idx" ON usuario (user_name);

CREATE INDEX "usuario_user_name_password_Idx" ON usuario (user_name, password);


/******************** Add Table: usuario_credencial ************************/

/* Build Table Structure */
CREATE TABLE usuario_credencial
(
	id BIGINT DEFAULT nextval('public.usuario_credencial_id_seq'::regclass) NOT NULL,
	usuario_id BIGINT NOT NULL,
	credencial_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL
);

/* Add Primary Key */
ALTER TABLE usuario_credencial ADD CONSTRAINT pkusuario_credencial
	PRIMARY KEY (id);
/******************** Add Table: depto ************************/

/* Build Table Structure */
CREATE TABLE depto
(
	id BIGINT DEFAULT nextval('public.depto_id_seq'::regclass) NOT NULL,
	nom_depto varchar(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE depto ADD CONSTRAINT pkdepto
	PRIMARY KEY (id);

/******************** Add Table: genero ************************/

/* Build Table Structure */
CREATE TABLE genero
(
	id BIGINT DEFAULT nextval('public.genero_id_seq'::regclass) NOT NULL,
	descripcion varchar(6) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE genero ADD CONSTRAINT pkgenero
	PRIMARY KEY (id);

/******************** Add Table: ciudad ************************/

/* Build Table Structure */
CREATE TABLE ciudad
(
	id BIGINT DEFAULT nextval('public.ciudad_id_seq'::regclass) NOT NULL,
	nom_ciudad varchar(80) NOT NULL,
	depto_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE ciudad ADD CONSTRAINT pkciudad
	PRIMARY KEY (id);

/******************** Add Table: proveedor ************************/

/* Build Table Structure */
CREATE TABLE proveedor
(
	id BIGINT DEFAULT nextval('public.proveedor_id_seq'::regclass) NOT NULL,
	nombre varchar(80) NOT NULL,
	apellido varchar(80) NOT NULL,
    direccion varchar(100) NOT NULL,
    correo varchar(50) NOT NULL,
    telefono varchar(12) NOT NULL,
    ciudad_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE proveedor ADD CONSTRAINT pkproveedor
	PRIMARY KEY (id);

/******************** Add Table: tipo_insumo ************************/

/* Build Table Structure */
CREATE TABLE tipo_insumo
(
	id BIGINT DEFAULT nextval('public.tipo_insumo_id_seq'::regclass) NOT NULL,
	desc_tipoin varchar(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE tipo_insumo ADD CONSTRAINT pktipo_insumo
	PRIMARY KEY (id);

/******************** Add Table: insumo ************************/

/* Build Table Structure */
CREATE TABLE insumo
(
	id BIGINT DEFAULT nextval('public.insumo_id_seq'::regclass) NOT NULL,
	desc_insumo varchar(80) NOT NULL,
	precio BIGINT NOT NULL,
    tipo_insumo_id BIGINT NOT NULL,
    fecha_fabricacion date NOT NULL,
    fecha_vencimiento date NOT NULL,
    proveedor_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE insumo ADD CONSTRAINT pkinsumo
	PRIMARY KEY (id);

/******************** Add Table: tipo_id ************************/

/* Build Table Structure */
CREATE TABLE tipo_id
(
	id BIGINT DEFAULT nextval('public.tipo_id_id_seq'::regclass) NOT NULL,
	desc_tipoid varchar(60) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE tipo_id ADD CONSTRAINT pktipo_id
	PRIMARY KEY (id);

/******************** Add Table: empleado ************************/

/* Build Table Structure */
CREATE TABLE empleado
(
	id BIGINT DEFAULT nextval('public.empleado_id_seq'::regclass) NOT NULL,
	nombre varchar(80) NOT NULL,
	apellido varchar(80) NOT NULL,
    direccion varchar(100) NOT NULL,
    correo varchar(50) NOT NULL,
    telefono varchar(12) NOT NULL,
    tipo_id_id BIGINT NOT NULL,
    usuario_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE empleado ADD CONSTRAINT pkempleado
	PRIMARY KEY (id);

/******************** Add Table: lote ************************/

/* Build Table Structure */
CREATE TABLE lote
(
	id BIGINT DEFAULT nextval('public.lote_id_seq'::regclass) NOT NULL,
	desc_lote varchar(80) NOT NULL,
    ubicacion varchar(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE lote ADD CONSTRAINT pklote
	PRIMARY KEY (id);

/******************** Add Table: raza ************************/

/* Build Table Structure */
CREATE TABLE raza
(
	id BIGINT DEFAULT nextval('public.raza_id_seq'::regclass) NOT NULL,
	desc_raza varchar(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE raza ADD CONSTRAINT pkraza
	PRIMARY KEY (id);

/******************** Add Table:estado ************************/

/* Build Table Structure */
CREATE TABLE estado
(
	id BIGINT DEFAULT nextval('public.estado_id_seq'::regclass) NOT NULL,
	desc_estado varchar(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE estado ADD CONSTRAINT pkestado
	PRIMARY KEY (id);

/******************** Add Table: control_peso ************************/

/* Build Table Structure */
CREATE TABLE control_peso
(
	id BIGINT DEFAULT nextval('public.control_peso_id_seq'::regclass) NOT NULL,
	peso_id BIGINT NOT NULL,
	empleado_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE control_peso ADD CONSTRAINT pkcontrol_peso
	PRIMARY KEY (id);

/******************** Add Table: hoja_vida ************************/

/* Build Table Structure */
CREATE TABLE hoja_vida
(
	id BIGINT DEFAULT nextval('public.hoja_vida_id_seq'::regclass) NOT NULL,
    genero_id BIGINT NOT NULL,
	fecha_nacimiento date NOT NULL,
    raza_id BIGINT NOT NULL,
    lote_id BIGINT NOT NULL,
    estado_id BIGINT NOT NULL,
    id_madre BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE hoja_vida ADD CONSTRAINT pkhoja_vida
	PRIMARY KEY (id);

/******************** Add Table:tipo_venta ************************/

/* Build Table Structure */
CREATE TABLE tipo_venta
(
	id BIGINT DEFAULT nextval('public.tipo_venta_id_seq'::regclass) NOT NULL,
	desc_tipov varchar(80) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE tipo_venta ADD CONSTRAINT pktipo_venta
	PRIMARY KEY (id);

/******************** Add Table:unidad_medida ************************/

/* Build Table Structure */
CREATE TABLE unidad_medida
(
	id BIGINT DEFAULT nextval('public.unidad_medida_id_seq'::regclass) NOT NULL,
	descripcion varchar(50) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE unidad_medida ADD CONSTRAINT pkunidad_medida
	PRIMARY KEY (id);

/******************** Add Table:sacrificio_venta ************************/

/* Build Table Structure */
CREATE TABLE sacrificio_venta
(
	id BIGINT DEFAULT nextval('public.sacrificio_venta_id_seq'::regclass) NOT NULL,
	valor BIGINT NOT NULL,
	cantidad BIGINT NOT NULL,
    unidad_medida_id BIGINT NOT NULL,
    tipo_venta_id BIGINT NOT NULL,
    id_cerdo BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE sacrificio_venta ADD CONSTRAINT pksacrificio_venta
	PRIMARY KEY (id);


/******************** Add Table: tipo_doc************************/

/* Build Table Structure */
CREATE TABLE tipo_doc
(
	id BIGINT DEFAULT nextval('public.tipo_doc_id_seq'::regclass) NOT NULL,
	desc_tipo_doc varchar(20) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE tipo_doc ADD CONSTRAINT pktipo_doc
	PRIMARY KEY (id);

/******************** Add Table:vacunacion ************************/

/* Build Table Structure */
CREATE TABLE vacunacion
(
	id BIGINT DEFAULT nextval('public.vacunacion_id_seq'::regclass) NOT NULL,
    dosis varchar(6) NOT NULL,
    hora  time NOT NULL,
	insumo_id BIGINT NOT NULL,
    id_cerdo BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE vacunacion ADD CONSTRAINT pkvacunacion
	PRIMARY KEY (id);

/******************** Add Table: parto************************/

/* Build Table Structure */
CREATE TABLE parto
(
	id BIGINT DEFAULT nextval('public.parto_id_seq'::regclass) NOT NULL,
	fecha_nacimiento varchar(10) NOT NULL,
	num_nacidos integer NOT NULL,
    num_vivos integer NOT NULL,
    num_muertos integer NOT NULL,
    num_hembras integer NOT NULL,
    num_machos integer NOT NULL,
    fecha_montada time NOT NULL,
    id_padre integer NOT NULL,
    hoja_vida_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE parto ADD CONSTRAINT pkparto
	PRIMARY KEY (id);

/******************** Add Table:entrada_bodega ************************/

/* Build Table Structure */
CREATE TABLE entrada_bodega
(
	id BIGINT DEFAULT nextval('public.entrada_bodega_id_seq'::regclass) NOT NULL,
	empleado_id BIGINT NOT NULL,
    proveedor_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE entrada_bodega ADD CONSTRAINT pkentrada_bodega
	PRIMARY KEY (id);

/******************** Add Table:detalle_entradaB ************************/

/* Build Table Structure */
CREATE TABLE detalle_entradaB
(
	id BIGINT DEFAULT nextval('public.entrada_bodega_id_seq'::regclass) NOT NULL,
	cantidad BIGINT NOT NULL,
    valor BIGINT NOT NULL,
    entrada_bodega_id BIGINT NOT NULL,
    insumo_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE detalle_entradaB ADD CONSTRAINT pkdetalle_entradaB
	PRIMARY KEY (id);

/******************** Add Table:salida_bodega ************************/

/* Build Table Structure */
CREATE TABLE salida_bodega
(
	id BIGINT DEFAULT nextval('public.salida_bodega_id_seq'::regclass) NOT NULL,
	empleado_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE salida_bodega ADD CONSTRAINT pksalida_bodega
	PRIMARY KEY (id);



/******************** Add Table:detalle_salidaB ************************/

/* Build Table Structure */
CREATE TABLE detalle_salidaB
(
	id BIGINT DEFAULT nextval('public.detalle_salidaB_id_seq'::regclass) NOT NULL,
	cantidad BIGINT NOT NULL,
    salida_bodega_id BIGINT NOT NULL,
    insumo_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
);

/* Add Primary Key */
ALTER TABLE detalle_salidaB ADD CONSTRAINT pkdetalle_salidaB
	PRIMARY KEY (id);


/******************** Add Table:reporte ************************/

/* Build Table Structure */
CREATE TABLE reporte
(
	id BIGINT DEFAULT nextval('public.reporte_id_seq'::regclass) NOT NULL,
	nombre VARCHAR(400) NOT NULL,
	descripcion VARCHAR(400) NOT NULL,	
	direccion VARCHAR(400) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL
);

/* Add Primary Key */
ALTER TABLE reporte ADD CONSTRAINT pkreporte
	PRIMARY KEY (id);
/******************** Add Table:inventario ************************/

/* Build Table Structure */
CREATE TABLE inventario
(
	id BIGINT DEFAULT nextval('public.inventario_id_seq'::regclass) NOT NULL,
	tipo_movimiento BIGINT NOT NULL,
	cantidad BIGINT NOT NULL,
    valor BIGINT NOT NULL,
    saldo BIGINT NOT NULL,
    tipo_doc_id BIGINT NOT NULL,
    insumo_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
    updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL

);

/* Add Primary Key */
ALTER TABLE inventario ADD CONSTRAINT pkinventario
	PRIMARY KEY (id);	


/************ Add Foreign Keys ***************/

/* Add Foreign Key: fk_bitacora_usuario */
ALTER TABLE bitacora ADD CONSTRAINT fk_bitacora_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_recordar_me_usuario */
ALTER TABLE recordar_me ADD CONSTRAINT fk_recordar_me_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_credencial_credencial */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_credencial_credencial
	FOREIGN KEY (credencial_id) REFERENCES credencial (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_credencial_usuario */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_credencial_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_ciudad */
ALTER TABLE ciudad ADD CONSTRAINT fk_ciudad
	FOREIGN KEY (depto_id) REFERENCES depto (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_proveedor */
ALTER TABLE proveedor ADD CONSTRAINT fk_proveedor
	FOREIGN KEY (ciudad_id) REFERENCES ciudad (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_insumo */
ALTER TABLE insumo ADD CONSTRAINT fk_insumo_tipo_insumo
	FOREIGN KEY (tipo_insumo_id) REFERENCES tipo_insumo (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_insumo */
ALTER TABLE insumo ADD CONSTRAINT fk_insumo_proveedor
	FOREIGN KEY (proveedor_id) REFERENCES proveedor (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_empleado */
ALTER TABLE empleado ADD CONSTRAINT fk_empleado_tipo_id
	FOREIGN KEY (tipo_id_id) REFERENCES tipo_id (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_empleado */
ALTER TABLE empleado ADD CONSTRAINT fk_empleado_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_control_peso */
ALTER TABLE control_peso ADD CONSTRAINT fk_control_peso
	FOREIGN KEY (empleado_id) REFERENCES empleado (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_control_peso */
ALTER TABLE control_peso ADD CONSTRAINT fk_control_peso_unidad_peso
	FOREIGN KEY (peso_id) REFERENCES unidad_medida (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_hoja_vida */
ALTER TABLE hoja_vida ADD CONSTRAINT fk_hoja_vida_lote
	FOREIGN KEY (lote_id) REFERENCES lote (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_hoja_vida */
ALTER TABLE hoja_vida ADD CONSTRAINT fk_hoja_vida_genero
	FOREIGN KEY (genero_id) REFERENCES genero (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_hoja_vida */
ALTER TABLE hoja_vida ADD CONSTRAINT fk_hoja_vida_raza
	FOREIGN KEY (raza_id) REFERENCES raza (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_hoja_vida */
ALTER TABLE hoja_vida ADD CONSTRAINT fk_hoja_vida_estado
	FOREIGN KEY (estado_id) REFERENCES estado (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;



/* Add Foreign Key: fk_sacrificio_venta */
ALTER TABLE sacrificio_venta ADD CONSTRAINT fk_sacrificio_venta_tipo_venta
	FOREIGN KEY (tipo_venta_id) REFERENCES tipo_venta (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_sacrificio_venta */
ALTER TABLE sacrificio_venta ADD CONSTRAINT fk_sacrificio_venta_unidad_medida
	FOREIGN KEY (unidad_medida_id) REFERENCES unidad_medida (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;


/* Add Foreign Key: fk_sacrificio_venta */
ALTER TABLE sacrificio_venta ADD CONSTRAINT fk_sacrificio_venta_id_cerdo
	FOREIGN KEY (id_cerdo) REFERENCES hoja_vida (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_vacunacion */
ALTER TABLE vacunacion ADD CONSTRAINT fk_vacunacion_id_cerdo
	FOREIGN KEY (id_cerdo) REFERENCES hoja_vida (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_vacunacion */
ALTER TABLE vacunacion ADD CONSTRAINT fk_vacunacion_insumo
	FOREIGN KEY (insumo_id) REFERENCES insumo (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_parto */
ALTER TABLE parto ADD CONSTRAINT fk_parto
	FOREIGN KEY (hoja_vida_id) REFERENCES hoja_vida (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_entrada_bodega */
ALTER TABLE entrada_bodega ADD CONSTRAINT fk_entrada_bodega_empleado
	FOREIGN KEY (empleado_id) REFERENCES empleado (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_entrada_bodega */
ALTER TABLE entrada_bodega ADD CONSTRAINT fk_entrada_bodega_proveedor
	FOREIGN KEY (proveedor_id) REFERENCES proveedor (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_detalle_entradaB */
ALTER TABLE detalle_entradaB  ADD CONSTRAINT fk_detalle_entradaB_entrada_bodega
	FOREIGN KEY (entrada_bodega_id) REFERENCES entrada_bodega (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_detalle_entradaB */
ALTER TABLE detalle_entradaB  ADD CONSTRAINT fk_detalle_entradaB_insumo
	FOREIGN KEY (insumo_id) REFERENCES insumo (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_salida_bodega */
ALTER TABLE salida_bodega ADD CONSTRAINT fk_salida_bodega_empleado
	FOREIGN KEY (empleado_id) REFERENCES empleado (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;



/* Add Foreign Key: fk_detalle_salidaB */
ALTER TABLE detalle_salidaB  ADD CONSTRAINT fk_detalle_salidaB_salida_bodega
	FOREIGN KEY (salida_bodega_id) REFERENCES salida_bodega (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_detalle_salidaB */
ALTER TABLE detalle_salidaB  ADD CONSTRAINT fk_detalle_salidaB_insumo
	FOREIGN KEY (insumo_id) REFERENCES insumo (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_inventario */
ALTER TABLE inventario  ADD CONSTRAINT fk_inventario_insumo
	FOREIGN KEY (insumo_id) REFERENCES insumo (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_inventario */
ALTER TABLE inventario  ADD CONSTRAINT fk_inventario_tipo_doc
	FOREIGN KEY (tipo_doc_id) REFERENCES tipo_doc (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;


-- ----------------------------
--  Records of "credencial"
-- ----------------------------
BEGIN;
INSERT INTO "credencial" (nombre) VALUES ('admin');
INSERT INTO "credencial" (nombre) VALUES ('usuario');
COMMIT;

-- ----------------------------
--  Records of "usuario" admin - 123
-- ----------------------------
BEGIN;
INSERT INTO "usuario" (user_name, password, actived, last_login_at) VALUES ('admin', '202cb962ac59075b964b07152d234b70', 't', null);
COMMIT;

-- ----------------------------
--  Records of "usuario_credencial"
-- ----------------------------
BEGIN;
INSERT INTO "usuario_credencial" (usuario_id, credencial_id) VALUES (1, 1);
COMMIT;
-- ----------------------------
--  Records of "depto"
-- ----------------------------
BEGIN;
INSERT INTO "depto" (nom_depto) VALUES ('valle');
INSERT INTO "depto" (nom_depto) VALUES ('nariño');
INSERT INTO "depto" (nom_depto) VALUES ('cundinamarca');
INSERT INTO "depto" (nom_depto) VALUES ('antioquia');
INSERT INTO "depto" (nom_depto) VALUES ('choco');
INSERT INTO "depto" (nom_depto) VALUES ('atlantico');
COMMIT;

